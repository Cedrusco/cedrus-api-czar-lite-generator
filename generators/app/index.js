'use strict';
var yeoman = require('yeoman-generator');
var chalk = require('chalk');
var yosay = require('yosay');

module.exports = yeoman.extend({
  prompting: function () {
    // Have Yeoman greet the user.
    this.log(yosay(
      'Welcome to the Cedrus ' + chalk.red('API CZAR') + ' generator!'
    ));

    this.log('\n# API Overview\n');
    var prompts = [{
      type: 'input',
      name: 'apiName',
      message: 'What would you like to call your API?',
      default: 'Sample API'
    }, {
      type: 'input',
      name: 'apiDescription',
      message: 'Describe your API?',
      default: 'This is sample API being generated by cedrus-api-czar-lite generator'
    }, {
      type: 'input',
      name: 'apiBasePath',
      message: 'Enter base path of your api?',
      default: '/api'
    }, {
      type: 'checkbox',
      name: 'apiConsumes',
      message: 'What media types does this API consume?',
      choices: [
        {
          name: 'JSON',
          value: 'application/json',
          checked: true
        },
        {
          name: 'XML',
          value: 'application/xml',
          disabled: true
        },
        {
          name: 'TEXT XML',
          value: 'text/xml',
          disabled: true
        },
        {
          name: 'TEXT HTML',
          value: 'text/html',
          disabled: true
        }
      ]
    }, {
      type: 'checkbox',
      name: 'apiProduces',
      message: 'What media types does this API produce?',
      choices: [
        {
          name: 'JSON',
          value: 'application/json',
          checked: true
        },
        {
          name: 'XML',
          value: 'application/xml',
          disabled: true
        },
        {
          name: 'TEXT XML',
          value: 'text/xml',
          disabled: true
        },
        {
          name: 'TEXT HTML',
          value: 'text/html',
          disabled: true
        }
      ]
    }];

    return this.prompt(prompts).then(function (props) {
      this.config.set({
        apiOverview: {
          apiName: props.apiName,
          apiBasePath: props.apiBasePath,
          apiDescription: props.apiDescription
        }
      });
      this.config.set({
        discover: {
          apiConsumes: props.apiConsumes,
          apiProduces: props.apiProduces
        }
      });
      this.composeWith('cedrus-api-czar-lite:options-versioning');
    }.bind(this));
  }
});
